{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1lifbHzTEJM_H_-XVXYp7BO6htIpug1LE","timestamp":1757525188236}],"authorship_tag":"ABX9TyPJM1GAC3GO8tcFi7rOdkQK"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":600},"id":"qQL5qNcVok3M","executionInfo":{"status":"ok","timestamp":1757524914100,"user_tz":-330,"elapsed":173,"user":{"displayName":"TAUSIQ S (RA2311027040044)","userId":"11406769495012048959"}},"outputId":"fa6cfa72-1e88-46d8-bb25-cd2cadfd74b4"},"outputs":[{"output_type":"stream","name":"stdout","text":["Raw Data:\n","   bhk propertytype   location   sqft  pricepersqft  totalprice\n","0    3         Flat  Ahmedabad   1346          6233    15700000\n","1    4         Flat  Ahmedabad   1872          4873    17500000\n","2    4         Flat  Ahmedabad   1650          6733    20200000\n","3    5         Flat  Ahmedabad  10201          8499    86700000\n","4    3         Flat  Ahmedabad    968          5944    10400000\n","Processed Training Features:\n"]},{"output_type":"display_data","data":{"text/plain":["       num__sqft  num__bhk  num__pricepersqft  cat__location_Ahmedabad  \\\n","14011  -0.016176 -0.901767          -0.032559                      0.0   \n","10835  -0.007648  0.368643           0.030050                      0.0   \n","11914  -0.141672 -0.901767          -0.021890                      0.0   \n","8661   -0.038108 -0.901767          -0.019859                      0.0   \n","958    -0.092936 -0.901767          -0.036407                      0.0   \n","\n","       cat__location_Amritsar  cat__location_Bangalore  cat__location_Bhilai  \\\n","14011                     0.0                      0.0                   0.0   \n","10835                     0.0                      0.0                   0.0   \n","11914                     0.0                      0.0                   0.0   \n","8661                      0.0                      0.0                   0.0   \n","958                       0.0                      0.0                   0.0   \n","\n","       cat__location_Bhopal  cat__location_Bhubaneswar  \\\n","14011                   0.0                        0.0   \n","10835                   0.0                        0.0   \n","11914                   0.0                        0.0   \n","8661                    0.0                        0.0   \n","958                     1.0                        0.0   \n","\n","       cat__location_Bilaspur  ...  cat__location_Rohini  \\\n","14011                     0.0  ...                   0.0   \n","10835                     0.0  ...                   0.0   \n","11914                     0.0  ...                   0.0   \n","8661                      0.0  ...                   0.0   \n","958                       0.0  ...                   0.0   \n","\n","       cat__location_Shimla  cat__location_Thane  cat__location_Trichy  \\\n","14011                   0.0                  0.0                   0.0   \n","10835                   0.0                  0.0                   0.0   \n","11914                   0.0                  0.0                   0.0   \n","8661                    0.0                  0.0                   0.0   \n","958                     0.0                  0.0                   0.0   \n","\n","       cat__location_Udaipur  cat__location_Vadodara  cat__location_Warangal  \\\n","14011                    0.0                     1.0                     0.0   \n","10835                    0.0                     0.0                     0.0   \n","11914                    0.0                     0.0                     0.0   \n","8661                     0.0                     0.0                     0.0   \n","958                      0.0                     0.0                     0.0   \n","\n","       cat__propertytype_Flat  cat__propertytype_House  \\\n","14011                     1.0                      0.0   \n","10835                     1.0                      0.0   \n","11914                     0.0                      1.0   \n","8661                      1.0                      0.0   \n","958                       1.0                      0.0   \n","\n","       cat__propertytype_Villa  \n","14011                      0.0  \n","10835                      0.0  \n","11914                      0.0  \n","8661                       0.0  \n","958                        0.0  \n","\n","[5 rows x 62 columns]"],"text/html":["\n","  <div id=\"df-62a5ea31-5a21-45ff-ab8f-0573c653ac61\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>num__sqft</th>\n","      <th>num__bhk</th>\n","      <th>num__pricepersqft</th>\n","      <th>cat__location_Ahmedabad</th>\n","      <th>cat__location_Amritsar</th>\n","      <th>cat__location_Bangalore</th>\n","      <th>cat__location_Bhilai</th>\n","      <th>cat__location_Bhopal</th>\n","      <th>cat__location_Bhubaneswar</th>\n","      <th>cat__location_Bilaspur</th>\n","      <th>...</th>\n","      <th>cat__location_Rohini</th>\n","      <th>cat__location_Shimla</th>\n","      <th>cat__location_Thane</th>\n","      <th>cat__location_Trichy</th>\n","      <th>cat__location_Udaipur</th>\n","      <th>cat__location_Vadodara</th>\n","      <th>cat__location_Warangal</th>\n","      <th>cat__propertytype_Flat</th>\n","      <th>cat__propertytype_House</th>\n","      <th>cat__propertytype_Villa</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>14011</th>\n","      <td>-0.016176</td>\n","      <td>-0.901767</td>\n","      <td>-0.032559</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>10835</th>\n","      <td>-0.007648</td>\n","      <td>0.368643</td>\n","      <td>0.030050</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>11914</th>\n","      <td>-0.141672</td>\n","      <td>-0.901767</td>\n","      <td>-0.021890</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>8661</th>\n","      <td>-0.038108</td>\n","      <td>-0.901767</td>\n","      <td>-0.019859</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>958</th>\n","      <td>-0.092936</td>\n","      <td>-0.901767</td>\n","      <td>-0.036407</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 62 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-62a5ea31-5a21-45ff-ab8f-0573c653ac61')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-62a5ea31-5a21-45ff-ab8f-0573c653ac61 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-62a5ea31-5a21-45ff-ab8f-0573c653ac61');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-1d2fd352-58ab-41fe-8628-5849494e06fb\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1d2fd352-58ab-41fe-8628-5849494e06fb')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-1d2fd352-58ab-41fe-8628-5849494e06fb button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Processed Training Target:\n"]},{"output_type":"display_data","data":{"text/plain":["       num__totalprice\n","14011        -0.462477\n","10835         0.190967\n","11914        -0.358305\n","8661         -0.149960\n","958          -0.391451"],"text/html":["\n","  <div id=\"df-e4fb6e91-66a6-42dc-ac43-c2723ee42c17\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>num__totalprice</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>14011</th>\n","      <td>-0.462477</td>\n","    </tr>\n","    <tr>\n","      <th>10835</th>\n","      <td>0.190967</td>\n","    </tr>\n","    <tr>\n","      <th>11914</th>\n","      <td>-0.358305</td>\n","    </tr>\n","    <tr>\n","      <th>8661</th>\n","      <td>-0.149960</td>\n","    </tr>\n","    <tr>\n","      <th>958</th>\n","      <td>-0.391451</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e4fb6e91-66a6-42dc-ac43-c2723ee42c17')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e4fb6e91-66a6-42dc-ac43-c2723ee42c17 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e4fb6e91-66a6-42dc-ac43-c2723ee42c17');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-361b07ee-75c0-4747-adfc-89af77d95188\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-361b07ee-75c0-4747-adfc-89af77d95188')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-361b07ee-75c0-4747-adfc-89af77d95188 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(y_train\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"num__totalprice\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.26462393758285857,\n        \"min\": -0.462477101189004,\n        \"max\": 0.19096681041643393,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.19096681041643393,\n          -0.39145058905797814,\n          -0.3583048833968327\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}],"source":["# ===============================\n","# 1. Import Libraries\n","# ===============================\n","import pandas as pd\n","import numpy as np\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler, OneHotEncoder\n","from sklearn.compose import ColumnTransformer\n","from sklearn.pipeline import Pipeline\n","from sklearn.impute import SimpleImputer\n","\n","# ===============================\n","# 2. Load Dataset (Kaggle)\n","# ===============================\n","# Make sure you downloaded 'House Price India.csv' from Kaggle first.\n","data = pd.read_csv(\"t1 ds.csv\")\n","\n","print(\"Raw Data:\")\n","print(data.head())\n","\n","# ===============================\n","# 3. Data Cleaning\n","# ===============================\n","# Rename columns if needed (some datasets have spaces)\n","data.columns = [col.strip() for col in data.columns]\n","\n","# Example: Ensure numeric columns are converted properly\n","# Update column names to match the loaded data\n","for col in ['sqft', 'bhk', 'pricepersqft']:\n","    if col in data.columns:\n","        data[col] = data[col].replace(',', '', regex=True).astype(float)\n","\n","# ===============================\n","# 4. Define Transformers\n","# ===============================\n","# Update column names to match the loaded data\n","num_features = ['sqft', 'bhk', 'pricepersqft']\n","cat_features = ['location', 'propertytype']\n","\n","num_transformer = Pipeline(steps=[\n","    (\"imputer\", SimpleImputer(strategy=\"mean\")),\n","    (\"scaler\", StandardScaler())\n","])\n","\n","cat_transformer = Pipeline(steps=[\n","    (\"imputer\", SimpleImputer(strategy=\"most_frequent\")),\n","    (\"onehot\", OneHotEncoder(handle_unknown=\"ignore\", sparse_output=False))\n","])\n","\n","# ===============================\n","# 5. Preprocess Input Features\n","# ===============================\n","preprocessor = ColumnTransformer(\n","    transformers=[\n","        (\"num\", num_transformer, num_features),\n","        (\"cat\", cat_transformer, cat_features)\n","    ]\n",")\n","preprocessor.set_output(transform=\"pandas\")\n","\n","X = preprocessor.fit_transform(data)\n","\n","# ===============================\n","# 6. Preprocess Target (Price)\n","# ===============================\n","# Update column name to match the loaded data\n","target_transformer = ColumnTransformer(\n","    transformers=[\n","        (\"num\", num_transformer, ['totalprice'])\n","    ]\n",")\n","target_transformer.set_output(transform=\"pandas\")\n","\n","y = target_transformer.fit_transform(data)\n","\n","# ===============================\n","# 7. Feature Engineering\n","# ===============================\n","# Price per sqft (if not already present) - use existing 'pricepersqft' column\n","# No need to create 'Price_per_sqft' if 'pricepersqft' exists and is used as a feature\n","\n","# ===============================\n","# 8. Train-Test Split\n","# ===============================\n","X_train, X_test, y_train, y_test = train_test_split(\n","    X, y, test_size=0.2, random_state=42\n",")\n","\n","print(\"Processed Training Features:\")\n","display(X_train.head())\n","\n","print(\"Processed Training Target:\")\n","display(y_train.head())"]}]}